/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: jetty/9.4.14.v20181114
 * Generated at: 2019-01-11 08:24:07 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class jsonindex_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("jar:file:/E:/mvnrep/jstl/jstl/1.2/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153356282000L));
    _jspx_dependants.put("file:/E:/mvnrep/jstl/jstl/1.2/jstl-1.2.jar", Long.valueOf(1546568191792L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");

	//String path = request.getContextPath();
	pageContext.setAttribute("path",request.getContextPath());

      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("\t<!--设置IE8 兼容 。-->\r\n");
      out.write("\t<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n");
      out.write("\t<!--兼容手机端.-->\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${path}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/static/bootstrap-3.3.7-dist/css/bootstrap.min.css\"/>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("\t<div class=\"container\">\r\n");
      out.write("\t\t<!-- 标题 -->\r\n");
      out.write("\t\t<div class=\"row\">\r\n");
      out.write("\t\t\t<div class=\"col-md-12\">\r\n");
      out.write("\t\t\t\t<h1>SSM-CRUD</h1>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<!-- 按钮 -->\r\n");
      out.write("\t\t<div class=\"row\">\r\n");
      out.write("\t\t\t<div class=\"col-md-4 col-md-offset-8\">\r\n");
      out.write("\t\t\t\t<button class=\"btn btn-primary\">新增</button>\r\n");
      out.write("\t\t\t\t<button class=\"btn btn-danger\">删除</button>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<!-- 显示表格数据 -->\r\n");
      out.write("\t\t<div class=\"row\">\r\n");
      out.write("\t\t\t<div class=\"col-md-12\">\r\n");
      out.write("\t\t\t\t<table class=\"table table-hover\" id=\"emps_tab\">\r\n");
      out.write("\t\t\t\t\t<thead>\r\n");
      out.write("\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t<th>#</th>\r\n");
      out.write("\t\t\t\t\t\t\t<th>empName</th>\r\n");
      out.write("\t\t\t\t\t\t\t<th>gender</th>\r\n");
      out.write("\t\t\t\t\t\t\t<th>email</th>\r\n");
      out.write("\t\t\t\t\t\t\t<th>deptName</th>\r\n");
      out.write("\t\t\t\t\t\t\t<th>操作</th>\r\n");
      out.write("\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t</thead>\r\n");
      out.write("\t\t\t\t\t<tbody>\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t</tbody>\r\n");
      out.write("\t\t\t\t</table>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t<!-- 显示分页信息 -->\r\n");
      out.write("\t\t<div class=\"row\">\r\n");
      out.write("\t\t\t<div class=\"col-md-6\" id=\"page_info\">\r\n");
      out.write("\t\t\t\t<br/>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"col-md-6\" id=\"page_bar\">\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t\r\n");
      out.write("\t</div>\r\n");
      out.write("\r\n");
      out.write("<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${path}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/static/js/jquery-1.9.1.min.js\"></script>\r\n");
      out.write("<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${path}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/static/bootstrap-3.3.7-dist/js/bootstrap.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\t<!-- 当页面加载完成的时候 ，就去发送一个ajax请求 。拿到方法的返回的json数据 。 -->\r\n");
      out.write("\t$(function (){\r\n");
      out.write("\t\t//alert(\"asd\");\r\n");
      out.write("\t\t//发送一个ajax请求 。\r\n");
      out.write("\t\tto_page(1);\r\n");
      out.write("\t})\r\n");
      out.write("\t\r\n");
      out.write("\tfunction to_page(page){\r\n");
      out.write("\t\t$.ajax({\r\n");
      out.write("\t\t\t   type: \"GET\",\r\n");
      out.write("\t\t\t   url: \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${path}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/emps?page=\"+page,\r\n");
      out.write("\t\t\t   success: function(msg){\r\n");
      out.write("\t\t\t     //alert(msg.data.pageInfo.pageNum);\r\n");
      out.write("\t\t\t     //构建三部分  。\r\n");
      out.write("\t\t\t     //1.构建表格的数据 。\r\n");
      out.write("\t\t\t     //2.构建分页的数据。\r\n");
      out.write("\t\t\t     //3.构建分页的板。\r\n");
      out.write("\t\t\t\t   build_table(msg);\r\n");
      out.write("\t\t\t       build_page_info(msg);\r\n");
      out.write("\t\t\t       build_page_bar(msg);\r\n");
      out.write("\t\t\t   }\r\n");
      out.write("\t\t});\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\tfunction build_table(msg){\r\n");
      out.write("\t\t//$(\"#emps_tab tbody\").empty();\r\n");
      out.write("\t\t//先拿到表格要显示的数据 。 代表了所有的列表数据 。\r\n");
      out.write("\t\tvar data = msg.data.pageInfo.list;\r\n");
      out.write("\t\t$.each(data,function(index,item){\r\n");
      out.write("\t\t/* \t//拿到每一个 td里面的数据 。\r\n");
      out.write("\t\t\tvar id = obj.eId;//拿到 id\r\n");
      out.write("\t\t\tvar name = obj.eName;\r\n");
      out.write("\t\t\tvar gender = obj.eGender==\"M\"?'男':'女';\r\n");
      out.write("\t\t\tvar email = obj.eEmail;\r\n");
      out.write("\t\t\tvar dId = obj.dId;\r\n");
      out.write("\t\t\tvar dName = obj.department.dName;\r\n");
      out.write("\t\t\t//alert(id+\"==\"+name+\"==\"+gender+\"==\"+email+\"==\"+dId+\"==\"+dName);\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t//首先创建tr\r\n");
      out.write("\t\t\t//var tr = $(\"<tr><tr>\");\r\n");
      out.write("\t\t\tvar id_td = $(\"<td></td>\").append(id);\r\n");
      out.write("\t\t\tvar name_td = $(\"<td></td>\").append(name);\r\n");
      out.write("\t\t\tvar gender_td = $(\"<td></td>\").append(gender);\r\n");
      out.write("\t\t\tvar email_td = $(\"<td></td>\").append(email);\r\n");
      out.write("\t\t\tvar dName_td = $(\"<td></td>\").append(dName);\r\n");
      out.write("\t\t\t//先来创建btn\r\n");
      out.write("\t\t\tvar edit_btn = $(\"<button></button>\").addClass(\"btn btn-warning btn-sm\").append($(\"<span></span>\").addClass(\"glyphicon glyphicon-pencil\").attr(\"aria-hidden\",true));\r\n");
      out.write("\t\t\tvar del_btn = $(\"<button></button>\").addClass(\"btn btn-danger btn-sm\").append($(\"<span></span>\").addClass(\"glyphicon glyphicon-trash\").attr(\"aria-hidden\",true));\r\n");
      out.write("\t\t\tvar btn_td = $(\"<td></td>\").append(edit_btn).append(\" \").append(del_btn);\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t$(\"<tr><tr>\").append(id_td).\r\n");
      out.write("\t\t\tappend(name_td).\r\n");
      out.write("\t\t\tappend(gender_td).\r\n");
      out.write("\t\t\tappend(email_td).\r\n");
      out.write("\t\t\tappend(dName_td).\r\n");
      out.write("\t\t\tappend(btn_td).appendTo(\"#emps_tab tbody\");\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t//alert(tr);\r\n");
      out.write("\t\t\t//$(\"#emps_tab tbody\").html(tr); */\r\n");
      out.write("\t\t\tvar id = item.eId;\r\n");
      out.write("\t\t\tvar name = item.eName;\r\n");
      out.write("\t\t\tvar gender = item.eGender==\"M\"?'男':'女';\r\n");
      out.write("\t\t\tvar email = item.eEmail;\r\n");
      out.write("\t\t\tvar dept_name = item.department.dName;\r\n");
      out.write("\t\t\t//alert(id+\"==\"+name+\"==\"+gender+\"==\"+email+\"==\"+dept_name);\r\n");
      out.write("\t\t\t/* $(\"#emps_tab tbody\").append(\"<tr><td>\"+id+\"</td><td>\"+name+\"</td><td>\"+gender+\"</td><td>\"+email+\"</td><td>\"+dept_name+\"</td>\"\r\n");
      out.write("\t\t\t+\"<td><button class='btn btn-primary btn-sm'><span class='glyphicon glyphicon-pencil' aria-hidden='true'></span>编辑</button>\"\r\n");
      out.write("\t\t\t+\" <button class='btn btn-danger btn-sm'><span class='glyphicon glyphicon-trash' aria-hidden='true'></span>删除</button></td></tr>\"); */\r\n");
      out.write("\t\t\tvar empIdTd = $(\"<td></td>\").append(id);\r\n");
      out.write("\t\t\tvar empNameTd = $(\"<td></td>\").append(name);\r\n");
      out.write("\t\t\tvar genderTd = $(\"<td></td>\").append(gender);\r\n");
      out.write("\t\t\tvar emailTd = $(\"<td></td>\").append(email);\r\n");
      out.write("\t\t\tvar deptNameTd = $(\"<td></td>\").append(dept_name);\r\n");
      out.write("\t\t\tvar editBtn = $(\"<button></button>\").addClass(\"btn btn-primary btn-sm edit_btn\")\r\n");
      out.write("\t\t\t.append($(\"<span></span>\").addClass(\"glyphicon glyphicon-pencil\")).append(\"编辑\");\r\n");
      out.write("\t\t\teditBtn.attr(\"edit-id\",id);\r\n");
      out.write("\t\t\tvar delBtn =  $(\"<button></button>\").addClass(\"btn btn-danger btn-sm delete_btn\")\r\n");
      out.write("\t\t\t.append($(\"<span></span>\").addClass(\"glyphicon glyphicon-trash\")).append(\"删除\");\r\n");
      out.write("\t\t\tdelBtn.attr(\"del-id\",id);\r\n");
      out.write("\t\t\tvar btnTd = $(\"<td></td>\").append(editBtn).append(\" \").append(delBtn);\r\n");
      out.write("\t\t\t$(\"<tr></tr>\").append(empIdTd)\r\n");
      out.write("\t\t\t.append(empNameTd)\r\n");
      out.write("\t\t\t.append(genderTd)\r\n");
      out.write("\t\t\t.append(emailTd)\r\n");
      out.write("\t\t\t.append(deptNameTd)\r\n");
      out.write("\t\t\t.append(btnTd)\r\n");
      out.write("\t\t\t.appendTo(\"#emps_tab tbody\");\r\n");
      out.write("\t\t});\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\tfunction build_page_info(msg){\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t$(\"#page_info\").append(\"当前 \"+msg.data.pageInfo.pageNum+\" 页,总 \"+msg.data.pageInfo.pages+\" 页,总 \"+msg.data.pageInfo.total+\" 条记录\");\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\tfunction build_page_bar(msg){\r\n");
      out.write("\t\t//构建分页的信息\r\n");
      out.write("\t\t/* var nav = $(\"<nav></nav>\").attr(\"aria-label\",\"Page navigation\");\r\n");
      out.write("\t\tvar ul = $(\"<ul></ul>\").addClass(\"pagination pagination-sm\");\r\n");
      out.write("\t\tvar li = $(\"<li></li>\").append($(\"<a></a>\").attr(\"href\",\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${path}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/emps\").append(\"首页\"));\r\n");
      out.write("\t\tvar n_ul=ul.append(li);\r\n");
      out.write("\t\tnav.append(n_ul).appendTo(\"#page_bar\"); */\r\n");
      out.write("\t\t//$(\"#page_bar\").empty();\r\n");
      out.write("\t\tvar nav = $(\"<nav></nav>\").attr(\"aria-label\",\"Page navigation\");\r\n");
      out.write("\t\tvar ul = $(\"<ul></ul>\").addClass(\"pagination pagination-sm\");\r\n");
      out.write("\t\tvar home = $(\"<li></li>\").append($(\"<a></a>\").append(\"首页\").attr(\"href\",\"#\"));\r\n");
      out.write("\t\tvar left = $(\"<li></li>\").append($(\"<a></a>\").append(\"&laquo;\"));\r\n");
      out.write("\t\t//添加判断 如果没有上一页  就把首页跟上一页给禁用掉 。否则的话跳转页面 。\r\n");
      out.write("\t\tul.append(home).append(left);\r\n");
      out.write("\t\t$.each(msg.data.pageInfo.navigatepageNums,function(index,item){\r\n");
      out.write("\t\t\tvar numLi = $(\"<li></li>\").append($(\"<a></a>\").append(item));\r\n");
      out.write("\t\t\t//判断添加当前页==集合中的页数  高亮显示。 然后每一个numLi添加一个点击事件 跳转具体的页面。\r\n");
      out.write("\t\t\tul.append(numLi);\r\n");
      out.write("\t\t})\r\n");
      out.write("\t\tvar right = $(\"<li></li>\").append($(\"<a></a>\").append(\"&raquo;\"));\r\n");
      out.write("\t\tvar end = $(\"<li></li>\").append($(\"<a></a>\").append(\"尾页\").attr(\"href\",\"#\"));\r\n");
      out.write("\t\t//添加判断  如果没有下一页，就把尾页跟下一页禁用掉 。否则的话就跳转页面 。\r\n");
      out.write("\t\tul.append(right);\r\n");
      out.write("\t\tul.append(end);\r\n");
      out.write("\t\tul.appendTo(nav);\r\n");
      out.write("\t\tnav.appendTo($(\"#page_bar\"));\r\n");
      out.write("\t}\r\n");
      out.write("</script>\t\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
